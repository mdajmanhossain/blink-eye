name: Build Tauri Meteor Template

on:
  push:
    branches: [ blink ]
  pull_request:
    branches: [ blink ]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: setup Rust cache
      uses: actions/cache@v4
      with:
        key: ${{ matrix.os }}-${{ hashFiles('packages/admin/src-tauri/Cargo.lock') }}
        path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            ./packages/admin/src-tauri/target
            
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'

    - name: Install BUN Globally
      run: npm install -g bun

    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}


    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev libgdk3-dev patchelf
        
    - name: Install Bun.js dependencies
      run: bun install

    - name: Install Tauri CLI
      run: cargo install tauri-cli # Install Tauri dependencies

    - name: Build application
      run: bun run tauri build

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.os }}
        path: src-tauri/target/release/bundle/**

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
        releaseName: 'App v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}
